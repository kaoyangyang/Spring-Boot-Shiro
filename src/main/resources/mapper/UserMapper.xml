<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.infotop.mapper.sys.UserMapper" >
  <!-- 基础结果集 -->
  <resultMap id="BaseResultMap" type="com.infotop.entity.sys.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="theme" property="theme" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="VARCHAR" />
    <result column="created_ip" property="createdIp" jdbcType="VARCHAR" />
    <result column="updated_time" property="updatedTime" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="pay_password" property="payPassword" jdbcType="VARCHAR" />
    <result column="pay_password_salt" property="payPasswordSalt" jdbcType="VARCHAR" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="VARCHAR" />
    <result column="last_login_ip" property="lastLoginIp" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="small_avatar" property="smallAvatar" jdbcType="VARCHAR" />
    <result column="middle_avatar" property="middleAvatar" jdbcType="VARCHAR" />
    <result column="large_avatar" property="largeAvatar" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, uuid, login_name, status, nickname, small_avatar, middle_avatar, large_avatar, password, theme, salt, type, phone, email, created_time, created_ip, updated_time, updated_ip, last_login_time, last_login_ip
  </sql>
  
  <!-- 根据主键查找用户 -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
	<include refid="Base_Column_List" />
    from sys_user 
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <!-- 新增用户 -->
  <insert id="insert"  useGeneratedKeys="true" keyProperty="id" parameterType="com.infotop.entity.sys.User" >
    insert into sys_user (id, uuid, login_name, password, salt, theme, type, status, created_time, created_ip, 
    updated_time, updated_ip, phone, email, nickname, small_avatar, middle_avatar, large_avatar
    )
    values (#{id,jdbcType=BIGINT}, #{uuid,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}
    		, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{theme,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}
    		, #{createdTime,jdbcType=VARCHAR}, #{createdIp,jdbcType=VARCHAR}, #{updatedTime,jdbcType=VARCHAR}, #{updatedIp,jdbcType=VARCHAR}
    		, #{phone, jdbcType=VARCHAR}, #{email, jdbcType=VARCHAR}, #{nickname, jdbcType=VARCHAR}
    		, #{smallAvatar, jdbcType=VARCHAR}, #{middleAvatar, jdbcType=VARCHAR}, #{largeAvatar, jdbcType=VARCHAR}
      )
  </insert>
  
  <!-- 根据主键修改用户信息 -->
  <update id="updateByPrimaryKeySelective" parameterType="com.infotop.entity.sys.User" >
    update sys_user
    <set >
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="theme != null" >
        theme = #{theme,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=VARCHAR},
      </if>
      <if test="createdIp != null" >
        created_ip = #{createdIp,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=VARCHAR},
      </if>
      <if test="updatedIp != null" >
        updated_ip = #{updatedIp,jdbcType=VARCHAR},
      </if>
      <if test="payPassword != null" >
        pay_password = #{payPassword,jdbcType=VARCHAR},
      </if>
       <if test="payPasswordSalt != null" >
        pay_password_salt = #{payPasswordSalt,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="smallAvatar != null" >
        small_avatar = #{smallAvatar,jdbcType=VARCHAR},
      </if>
      <if test="middleAvatar != null" >
        middle_avatar = #{middleAvatar,jdbcType=VARCHAR},
      </if>
      <if test="largeAvatar != null" >
        large_avatar = #{largeAvatar,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 根据loginName查询用户信息 -->
  <select id="selectByLoginName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where login_name = #{userName,jdbcType=VARCHAR}
  </select>
  
  <!-- 根据nickname查询用户信息 -->
  <select id="selectByNickname" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where nickname = #{nickname,jdbcType=VARCHAR}
  </select>
  
    
  <!-- 查询所有用户信息 -->
  <select id="selectAll" resultMap="BaseResultMap" parameterType="java.util.Map">
    select 
    <include refid="Base_Column_List" />
    from sys_user 
    where 1=1
    <if test="id != null"> and id = #{id} </if>  
    <if test="loginName != null and loginName != ''"> and login_name like concat('%', #{loginName}, '%') </if>  
    <if test="type != null and type != ''"> and type = #{type} </if>  
    <if test="email != null and email != ''"> and email like concat('%', #{email}, '%') </if>  
    <if test="phone != null and phone != ''"> and phone like concat('%', #{phone}, '%') </if>
    <if test="nickname != null and nickname != ''"> and nickname like concat('%', #{nickname}, '%') </if>
	<if test="username != null and nickname != ''"> and username like concat('%', #{username}, '%') </if>
	<if test="status !=null"> and status = #{status}</if>
	<!-- 精确查询 -->
	<if test="whole_phone != null and whole_phone != ''"> and phone = #{whole_phone}</if>
	
	order by created_time desc
	
    <!-- 手动添加分页 -->
   	<if test="offsetIndex != null" > limit #{offsetIndex}, #{limit} </if>
  </select>
  
  
  <!-- 查询用户信息，精准查询，不使用模糊，用于验证loginName/nickname -->
  <select id="selectAllEqual" resultMap="BaseResultMap" parameterType="java.util.Map">
    select 
    <include refid="Base_Column_List" />
    from sys_user 
    where status = '0'
    <if test="id != null"> and id = #{id} </if>  
    <if test="loginName != null and loginName != ''"> and login_name = #{loginName}</if>  
    <if test="type != null and type != ''"> and type = #{type} </if>  
    <if test="nickname != null and nickname != ''"> and nickname = #{nickname}</if>
  </select>
  
  <!-- 查询所有用户总数，用于分页 -->
  <select id="selectAllCount" resultType="java.lang.Long" parameterType="java.util.Map">
    select 
     count(1) as total
    from sys_user
    where status = '0'
    <if test="id != null"> and id = #{id} </if>  
    <if test="loginName != null and loginName != ''"> and login_name like concat('%', #{loginName}, '%') </if>  
    <if test="type != null and type != ''"> and type = #{type} </if>  
    <if test="email != null and email != ''"> and email like concat('%', #{email}, '%') </if>  
    <if test="phone != null and phone != ''"> and phone like concat('%', #{phone}, '%') </if>  
    <if test="nickname != null and nickname != ''"> and nickname like concat('%', #{nickname}, '%') </if>
    <if test="username != null and nickname != ''"> and username like concat('%', #{username}, '%') </if>
    <if test="createdTimeLike != null and createdTimeLike != ''"> and created_time like concat('%', #{createdTimeLike}, '%') </if>
    <if test="createdTimeLTE != null and createdTimeLTE != ''"> and created_time  &lt;= #{createdTimeLTE,jdbcType=VARCHAR} </if>
  </select>
  
   <!-- 为班级学员查询用户信息 -->
  <select id="selectAllForClassroomMember" resultMap="BaseResultMap" parameterType="java.util.Map">
    select 
    <include refid="Base_Column_List" />
    from sys_user as u
    where status = '0'
    <if test="id != null"> and u.id = #{id} </if>  
    <if test="loginName != null and loginName != ''"> and u.login_name like concat('%', #{loginName}, '%') </if>  
    <if test="nickname != null and nickname != ''"> and u.nickname like concat('%', #{nickname}, '%') </if>  
    <if test="type != null and type != ''"> and u.type = #{type} </if>  
    <!-- 班级学员模块用 -->
    <if test="classroommember==true" >
       and not EXISTS(select user_id from classroom_member cm where user_id=u.id  and classroomuuid =#{classroomuuid})
    </if>  
    <!-- 课程学员模块用 -->
    <if test="coursemember==true" >
       and not EXISTS(select user_id from course_member cm where user_id=u.id  and courseuuid =#{courseuuid})
    </if>
    <!-- 手动添加分页 -->
   	<if test="offsetIndex != null" > limit #{offsetIndex}, #{limit} </if>
  </select>
  
   <!-- 为班级学员查询用户总数，用于分页 -->
  <select id="selectAllCountForClassroomMember" resultType="java.lang.Long" parameterType="java.util.Map">
    select 
     count(1) as total
    from sys_user u
    where status = '0'
    <if test="id != null"> and u.id = #{id} </if>  
    <if test="loginName != null and loginName != ''"> and u.login_name like concat('%', #{loginName}, '%') </if>  
    <if test="nickname != null and nickname != ''"> and u.nickname like concat('%', #{nickname}, '%') </if>  
    <if test="type != null and type != ''"> and u.type = #{type} </if>  
    <!-- 班级学员模块用 -->
    <if test="classroommember==true" >
       and not EXISTS(select user_id from classroom_member cm where user_id=u.id  and classroomuuid =#{classroomuuid})
    </if>
    <!-- 课程学员模块用 -->
    <if test="coursemember==true" >
       and not EXISTS(select user_id from course_member cm where user_id=u.id  and courseuuid =#{courseuuid})
    </if>
  </select>
  
  <!-- 封禁用户，修改status字段 -->
  <update id="blockedUser" parameterType="java.lang.Long" >
    update sys_user
      set  status = '1'
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 解封用户，修改status字段 -->
  <update id="unblockedUser" parameterType="java.lang.Long" >
    update sys_user
      set  status = '0'
    where id = #{id,jdbcType=BIGINT}
  </update>
   
   <!--  统计条数 -->
   <select id="getStatisticsByDay" resultType="java.util.Map" parameterType="java.util.Map">
  	SELECT date_format(date, '%Y-%m-%d') date, max(a.Count) AS count
    FROM (SELECT o.created_time as date, (SELECT count(id) AS count FROM sys_user i WHERE i.status = '0' 
   and date_format(i.created_time, '%Y-%m-%d') 
   <if test="allOrAdd != null and allOrAdd == 'add'" > = </if><if test="allOrAdd != null and allOrAdd == 'all'" > &lt;=  </if>
    date_format(o.created_time, '%Y-%m-%d') ) AS Count
    FROM sys_user o WHERE o.status = '0' 
    and date_format(o.created_time, '%Y-%m-%d') &lt;= #{endDate, jdbcType=VARCHAR} 
    and date_format(o.created_time, '%Y-%m-%d') &gt;= #{startDate, jdbcType=VARCHAR}
    <!--  统计总量需要添加第一个日期的数据 -->
    <if test="allOrAdd != null and allOrAdd == 'all'" >
	    union ALL (SELECT '${startDate}' As date,count(id) AS count FROM sys_user i WHERE i.status = '0' 
	    and date_format(i.created_time, '%Y-%m-%d') &lt;= #{startDate, jdbcType=VARCHAR})  
    </if>
    
    ) AS a GROUP BY date_format(date, '%Y-%m-%d') ORDER BY date;  
	</select> 
  
  <!-- 修改绑定信息 -->
  <update id="updateBindInfo" parameterType="java.util.Map" >
    update sys_user
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>